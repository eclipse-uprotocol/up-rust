<?xml version="1.0" encoding="utf-8"?>
<testsuites>
  <testsuite id="0" name="cargo test #0" package="testsuite/cargo test #0" tests="347" errors="0" failures="0" hostname="localhost" timestamp="2023-10-06T08:08:54.05504088Z" time="0">
    <testcase name="test_hash_code_equals" time="0" classname="cloudevent::datamodel::ucloudeventattributes::tests" />
    <testcase name="test_create_valid" time="0" classname="cloudevent::datamodel::ucloudeventattributes::tests" />
    <testcase name="test_is_empty_function" time="0" classname="cloudevent::datamodel::ucloudeventattributes::tests" />
    <testcase name="test_is_empty_function_permutations" time="0" classname="cloudevent::datamodel::ucloudeventattributes::tests" />
    <testcase name="test_is_empty_function_when_built_with_blank_strings" time="0" classname="cloudevent::datamodel::ucloudeventattributes::tests" />
    <testcase name="test_to_string" time="0" classname="cloudevent::datamodel::ucloudeventattributes::tests" />
    <testcase name="test_parse_file_event_type_from_string" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_parse_publish_event_type_from_string" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_parse_request_event_type_from_string" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_parse_response_event_type_from_string" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_parse_unknown_event_type_from_string" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_type_for_file" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_type_for_publish" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_type_for_request" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_type_for_response" time="0" classname="cloudevent::datamodel::ucloudeventtype::tests" />
    <testcase name="test_adding_platform_error_to_existing_cloud_event" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloud_event_has_no_platform_error_when_platform_error_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloud_event_has_platform_error_when_platform_error_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_does_not_have_a_uuid_just_some_string" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_does_not_have_a_v8_uuid" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_has_a_v8_uuid" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_expired_cd_when_ttl_500_mili_with_creation_date_of_yesterday" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_cd_when_no_ttl_configured" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_cd_when_ttl_3_mili_no_creation_date" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_cd_when_ttl_500_mili_with_creation_date_of_now" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_cd_when_ttl_500_mili_with_creation_date_of_tomorrow" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_cd_when_ttl_is_minus_one" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_cd_when_ttl_is_zero" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_when_no_ttl_configured" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_when_ttl_is_large_number_mili" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_when_ttl_is_minus_one" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_not_expired_when_ttl_is_zero" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_creation_timestamp_from_cloud_event_uuid_id_when_not_a_uuidv8_id" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_creation_timestamp_from_cloud_event_uuidv8_id_when_uuidv8_id_is_valid" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_hash_from_cloud_event_when_hash_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_hash_from_cloud_event_when_hash_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_payload_from_cloud_event_as_any_proto_object" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_payload_from_cloud_event_as_any_proto_object_when_no_data" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_payload_from_cloud_event_as_any_proto_object_when_no_schema" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_payload_from_cloud_event_when_payload_is_bad_proto_object" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_payload_from_cloud_event_when_payload_is_not_an_any_proto_object" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_platform_error_from_cloud_event_when_error_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_platform_error_from_cloud_event_when_error_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_platform_error_from_cloud_event_when_error_exists_in_wrong_format" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_cloudevent_is_expired_when_ttl_1_mili" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_priority_from_cloud_event_when_priority_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_priority_from_cloud_event_when_priority_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_request_id_from_cloud_event_when_request_id_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_request_id_from_cloud_event_when_request_id_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_request_id_from_cloud_event_when_request_id_value_is_none" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_sink_from_cloud_event_when_sink_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_sink_from_cloud_event_when_sink_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_source_from_cloud_event" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_token_from_cloud_event_when_token_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_token_from_cloud_event_when_token_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_ttl_from_cloud_event_when_ttl_does_not_exist" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_extract_ttl_from_cloud_event_when_ttl_exists" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_pretty_printing_a_cloudevent_with_a_sink" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_pretty_printing_a_cloudevent_without_a_sink" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_unpack_payload_by_class_from_cloud_event_proto_message_object" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_unpack_payload_from_cloud_event_when_not_valid_message" time="0" classname="cloudevent::ucloudevent::tests" />
    <testcase name="test_create_a_failed_response_cloud_event_originating_from_local_use" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_a_failed_response_cloud_event_originating_from_remote_use" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_base_cloud_event" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_base_cloud_event_without_attributes" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_notification_cloud_event" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_publish_cloud_event" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_request_cloud_event_from_local_use" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_request_cloud_event_from_remote_use" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_response_cloud_event_originating_from_local_use" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_create_response_cloud_event_originating_from_remote_use" time="0" classname="cloudevent::ucloudeventbuilder::tests" />
    <testcase name="test_get_a_notification_cloud_event_validator" time="0" classname="cloudevent::validator::cloudeventvalidator::tests" />
    <testcase name="test_get_a_publish_cloud_event_validator" time="0" classname="cloudevent::validator::cloudeventvalidator::tests" />
    <testcase name="test_publish_cloud_event_type" time="0" classname="cloudevent::validator::cloudeventvalidator::tests" />
    <testcase name="test_failure_validation_result_is_success" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_failure_validation_result_message" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_failure_validation_result_to_status" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_failure_validation_result_to_string" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_success_validation_result_is_success" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_success_validation_result_message" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_success_validation_result_to_status" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_success_validation_result_to_string" time="0" classname="cloudevent::validator::validationresult::tests" />
    <testcase name="test_cloudevent_to_proto" time="0" classname="proto::cloudevents::protocloudevent::tests" />
    <testcase name="test_creating_call_options_default" time="0" classname="rpc::calloptions::tests" />
    <testcase name="test_creating_call_options_with_a_timeout" time="0" classname="rpc::calloptions::tests" />
    <testcase name="test_creating_call_options_with_a_token" time="0" classname="rpc::calloptions::tests" />
    <testcase name="test_creating_call_options_with_a_token_with_only_spaces" time="0" classname="rpc::calloptions::tests" />
    <testcase name="test_creating_call_options_with_empty_string_token" time="0" classname="rpc::calloptions::tests" />
    <testcase name="test_hash_code_equals" time="0" classname="rpc::calloptions::tests" />
    <testcase name="test_to_string" time="0" classname="rpc::calloptions::tests" />
    <testcase name="test_compose_happy_path" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_compose_happy_path_with_success_check" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_compose_that_returns_status" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_compose_with_failure" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_fail_invoke_method_when_invoke_method_returns_a_bad_proto_using_map_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_fail_invoke_method_when_invoke_method_returns_a_bad_proto_using_map_response_to_rpc_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_fail_invoke_method_when_invoke_method_returns_a_status_using_map_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_fail_invoke_method_when_invoke_method_returns_a_status_using_map_response_to_rpc_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_invalid_payload_that_is_not_type_and_map_to_result" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_invalid_payload_that_is_not_type_any" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_success_invoke_method_happy_flow_that_returns_status_using_map_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_success_invoke_method_happy_flow_that_returns_status_using_map_response_to_result_to_rpc_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_success_invoke_method_happy_flow_using_map_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_success_invoke_method_happy_flow_using_map_response_to_rpc_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_success_invoke_method_that_has_null_payload_map_response" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_success_invoke_method_that_has_null_payload_map_response_to_result" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_unpack_payload_failed" time="0" classname="rpc::rpcmapper::tests" />
    <testcase name="test_and_then_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_and_then_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_and_then_success_when_function_returns_error" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_failure_value_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_failure_value_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_filter_on_success_that_fails" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_filter_on_success_that_succeeds" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_flatten_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_flatten_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_flatten_on_success_with_function_that_fails" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_is_failure_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_is_failure_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_is_success_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_is_success_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_map_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_map_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_map_success_when_function_returns_error" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_success_value_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_success_value_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_to_string_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_to_string_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_unwrap_or_else_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_unwrap_or_else_on_failure_value" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_unwrap_or_else_on_success" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_unwrap_or_else_on_success_value" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_validate_on_failure" time="0" classname="rpc::rpcresult::tests" />
    <testcase name="test_find_umessage_type_from_number" time="0" classname="transport::datamodel::umessagetype::tests" />
    <testcase name="test_find_umessage_type_from_number_that_does_not_exist" time="0" classname="transport::datamodel::umessagetype::tests" />
    <testcase name="test_find_umessage_type_from_string" time="0" classname="transport::datamodel::umessagetype::tests" />
    <testcase name="test_find_umessage_type_from_string_that_does_not_exist" time="0" classname="transport::datamodel::umessagetype::tests" />
    <testcase name="create_an_empty_upayload" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="create_upayload_from_a_string" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="create_upayload_from_a_string_with_a_hint" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="create_upayload_from_bytes" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="test_equality" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="test_is_empty_with_data" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="test_is_empty_with_empty" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="test_to_string_with_empty" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="test_to_string_with_hello" time="0" classname="transport::datamodel::upayload::tests" />
    <testcase name="test_find_upriority_from_number" time="0" classname="transport::datamodel::upriority::tests" />
    <testcase name="test_find_upriority_from_number_that_does_not_exist" time="0" classname="transport::datamodel::upriority::tests" />
    <testcase name="test_find_upriority_from_string" time="0" classname="transport::datamodel::upriority::tests" />
    <testcase name="test_find_upriority_from_string_that_does_not_exist" time="0" classname="transport::datamodel::upriority::tests" />
    <testcase name="test_find_userializationhint_from_number" time="0" classname="transport::datamodel::userializationhint::tests" />
    <testcase name="test_find_userializationhint_from_number_that_does_not_exist" time="0" classname="transport::datamodel::userializationhint::tests" />
    <testcase name="test_find_userializationhint_from_string" time="0" classname="transport::datamodel::userializationhint::tests" />
    <testcase name="test_find_userializationhint_from_string_that_does_not_exist" time="0" classname="transport::datamodel::userializationhint::tests" />
    <testcase name="code_from_a_known_int_code" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="code_from_a_unknown_int_code" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="create_failed_status" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="create_failed_status_with_message" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="create_failed_status_with_message_and_failure_reason" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="create_ok_status" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="create_ok_status_with_id" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_hash_code_equals" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_hash_code_equals_fail_scenarios" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_hash_code_equals_ok_scenarios" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_to_string_for_failed_status" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_to_string_for_failed_status_with_message" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_to_string_for_failed_status_with_message_and_code" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_to_string_for_failed_status_with_message_and_failure_reason" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_to_string_for_ok_status" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_to_string_for_ok_status_with_id" time="0" classname="transport::datamodel::ustatus::tests" />
    <testcase name="test_fetching_validator_for_valid_types" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_invalid_commstatus_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_invalid_req_id_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_invalid_sink_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_publish_invalid_ttl_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_publish_validator_with_wrong_messagetype" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_request_containing_hint_and_token" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_request_message_types" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_request_validator_with_wrong_bad_ttl" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_request_validator_with_wrong_messagetype" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_response_validator_with_bad_reqid" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_response_validator_with_wrong_bad_ttl" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_response_validator_with_wrong_messagetype" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_valid_commstatus_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_valid_permission_level_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_valid_publish_messagetypes" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_valid_req_id_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_valid_sink_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_validating_valid_ttl_attribute" time="0" classname="transport::validator::uattributesvalidator::tests" />
    <testcase name="test_blank_remote_uauthority_is_local" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_create_uauthority_with_valid_ip_address" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_create_uauthority_with_valid_ipv4_address_in_device_name" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_create_uauthority_with_valid_ipv6_address" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_empty" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_is_local" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_is_remote" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_is_resolved_with_resolved_uauthority" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_is_resolved_with_unresolved_uauthority" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_local_uauthority" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_local_uauthority_one_part_empty" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_remote_uauthority" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_remote_uauthority_case_sensitive" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_to_string" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_to_string_case_sensitivity" time="0" classname="uri::datamodel::uauthority::tests" />
    <testcase name="test_create_empty_using_empty" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_create_use" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_create_use_with_id" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_create_use_with_invalid_id" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_create_use_with_no_version" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_create_use_with_no_version_using_from_name" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_is_empty" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_to_string" time="0" classname="uri::datamodel::uentity::tests" />
    <testcase name="test_create_empty_using_empty" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_request_uresource_passing_name_instance_and_id" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_resource" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_resource_for_rpc_commands" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_resource_with_no_instance_and_no_message" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_resource_with_no_instance_and_no_message_using_from_name" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_resource_with_no_message_using_from_name_with_instance" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_response_uresource_by_calling_from_id" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_response_uresource_passing_name_instance_and_id" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_rpc_response_using_response_method" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_uresource_by_calling_from_id_static_method" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_uresource_with_invalid_id" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_uresource_with_valid_id" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_is_empty" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_is_resolved_with_resolved_uresources" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_is_resolved_with_unresolved_uresources" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_parse_from_string_with_missing_instance_and_or_message" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_parse_from_string_with_valid_long_form_uresource_string" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_resource_represents_a_resource_and_not_an_rpc_method_call" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_resource_represents_an_rpc_method_call" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_returning_a_name_with_instance_from_resource_when_all_properties_are_configured" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_returning_a_name_with_instance_from_resource_when_name_and_instance_are_configured" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_returning_a_name_with_instance_from_resource_when_only_name_is_configured" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_to_string" time="0" classname="uri::datamodel::uresource::tests" />
    <testcase name="test_create_empty_using_empty" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_create_full_local_uri" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_create_full_remote_uri" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_create_uri_no_message_with_constructor" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_create_uri_null_authority" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_create_uri_null_u_resource" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_create_uri_null_use" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_is_empty" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_is_resolved_and_is_long_form" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_to_string" time="0" classname="uri::datamodel::uuri::tests" />
    <testcase name="test_build_protocol_uri_for_source_part_of_rpc_request_where_source_is_local" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_for_source_part_of_rpc_request_where_source_is_remote" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_parts_when_they_are_none" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_parts_when_uri_has_remote_authority_service_and_version_with_resource" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_empty_use" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_and_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_and_version_with_resource" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_and_version_with_resource_with_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_and_version_with_resource_with_instance_with_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_no_version_with_resource" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_no_version_with_resource_with_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_local_authority_service_no_version_with_resource_with_instance_with_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_no_device_with_domain_with_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_and_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_and_version_with_resource" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_and_version_with_resource_with_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_and_version_with_resource_with_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_no_version_with_resource" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_no_version_with_resource_with_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_authority_service_no_version_with_resource_with_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_cloud_authority_service_and_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_has_remote_cloud_authority_service_and_version_with_resource_with_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_protocol_uri_from_uri_when_uri_is_empty" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_custom_scheme_no_scheme" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_custom_scheme_no_scheme_empty" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_local_protocol_uri_with_custom_scheme" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_rpc_uri_with_local_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_rpc_uri_with_local_service_with_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_rpc_uri_with_remote_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_rpc_uri_with_remote_service_with_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_when_is_empty_string" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_no_version_with_resource_name_only" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_no_version_with_resource_with_instance" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_no_version_with_resource_with_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_with_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_with_version_with_resource_name_only" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_with_version_with_resource_with_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_local_service_with_version_with_resource_with_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_cloud_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_cloud_service_no_version_with_resource_and_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_cloud_service_no_version_with_resource_name_only" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_cloud_service_with_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_cloud_service_with_version_with_resource_and_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_cloud_with_version_with_resource_name_only" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_no_domain_with_version_with_resource_and_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_no_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_no_version_with_resource_and_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_no_version_with_resource_and_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_no_version_with_resource_name_only" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_only_device_and_cloud_domain" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_only_device_and_domain" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_only_device_no_domain" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_with_version" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_with_version_with_resource_and_instance_and_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_with_version_with_resource_and_instance_no_message" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_remote_service_with_version_with_resource_name_only" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_schema_and_3_slash_and_something" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_schema_and_4_slash_and_something" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_schema_and_5_slash_and_something" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_schema_and_6_slash_and_something" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_schema_and_double_slash" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_protocol_uri_with_schema_and_slash" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_remote_protocol_uri_with_custom_scheme" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_parse_uprotocol_uri_when_is_null" time="0" classname="uri::serializer::longuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_empty_uri" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_local_uri" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_local_uri_large_minor_version" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_local_uri_no_version" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_local_uri_simple_version" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_local_uri_then_parse_back_to_uri" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_remote_ipv4_address" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_remote_ipv6_address" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_remote_uri_missing_uentity" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_uri_invalid_address" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_build_micro_uri_from_uri_missing_uresource_id" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_empty" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_parse_micro_uri_from_empty_byte_array" time="0" classname="uri::serializer::microuriserializer::tests" />
    <testcase name="test_validate_blank_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_long_uuri_with_valid_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_rpc_method_with_invalid_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_rpc_method_with_malformed_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_rpc_method_with_valid_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_rpc_response_with_invalid_rpc_response_type" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_rpc_response_with_malformed_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_rpc_response_with_rpc_type" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_rpc_response_with_valid_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_uri_with_entity" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_uri_with_no_entity_name" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_with_blank_uentity_name_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_validate_with_malformed_uri" time="0" classname="uri::validator::urivalidator::tests" />
    <testcase name="test_obj_to_string_conversions" time="0" classname="uuid::uuidbuilder::tests" />
    <testcase name="test_string_to_obj_conversions" time="0" classname="uuid::uuidbuilder::tests" />
    <testcase name="test_uuid6_byte_obj_conversions" time="0" classname="uuid::uuidbuilder::tests" />
    <testcase name="test_uuid_byte_obj_conversions" time="0" classname="uuid::uuidbuilder::tests" />
    <testcase name="test_uuid6_build_many" time="0" classname="uuid::uuidbuilder::tests" />
    <testcase name="test_uuid_create_test_counters" time="0" classname="uuid::uuidbuilder::tests" />
    <testcase name="test_uuid_for_constant_random" time="0" classname="uuid::uuidbuilder::tests" />
    <testcase name="test_uuid_size" time="0" classname="uuid::uuidbuilder::tests" />
  </testsuite>
  <testsuite id="1" name="cargo test #1" package="testsuite/cargo test #1" tests="1" errors="0" failures="0" hostname="localhost" timestamp="2023-10-06T08:08:54.05504088Z" time="0">
    <testcase name="empty" time="0" classname="" />
  </testsuite>
  <testsuite id="2" name="cargo test #2" package="testsuite/cargo test #2" tests="26" errors="0" failures="0" hostname="localhost" timestamp="2023-10-06T08:08:54.05504088Z" time="0">
    <testcase name="build_base_cloud_event (line 334)" time="0" classname="src/cloudevent/ucloudeventbuilder.rs - cloudevent::ucloudeventbuilder::UCloudEventBuilder" />
    <testcase name="notify (line 279)" time="0" classname="src/cloudevent/ucloudeventbuilder.rs - cloudevent::ucloudeventbuilder::UCloudEventBuilder" />
    <testcase name="publish (line 233)" time="0" classname="src/cloudevent/ucloudeventbuilder.rs - cloudevent::ucloudeventbuilder::UCloudEventBuilder" />
    <testcase name="request (line 57)" time="0" classname="src/cloudevent/ucloudeventbuilder.rs - cloudevent::ucloudeventbuilder::UCloudEventBuilder" />
    <testcase name="response (line 113)" time="0" classname="src/cloudevent/ucloudeventbuilder.rs - cloudevent::ucloudeventbuilder::UCloudEventBuilder" />
    <testcase name="response_failed (line 173)" time="0" classname="src/cloudevent/ucloudeventbuilder.rs - cloudevent::ucloudeventbuilder::UCloudEventBuilder" />
    <testcase name="EMPTY (line 56)" time="0" classname="src/uri/datamodel/uauthority.rs - uri::datamodel::uauthority::UAuthority" />
    <testcase name="LOCAL (line 76)" time="0" classname="src/uri/datamodel/uauthority.rs - uri::datamodel::uauthority::UAuthority" />
    <testcase name="is_local (line 238)" time="0" classname="src/uri/datamodel/uauthority.rs - uri::datamodel::uauthority::UAuthority" />
    <testcase name="is_remote (line 219)" time="0" classname="src/uri/datamodel/uauthority.rs - uri::datamodel::uauthority::UAuthority" />
    <testcase name="new (line 99)" time="0" classname="src/uri/datamodel/uauthority.rs - uri::datamodel::uauthority::UAuthority" />
    <testcase name="remote_device_domain (line 179)" time="0" classname="src/uri/datamodel/uauthority.rs - uri::datamodel::uauthority::UAuthority" />
    <testcase name="is_empty (line 148)" time="0" classname="src/uri/datamodel/uentity.rs - uri::datamodel::uentity::UEntity" />
    <testcase name="long_format (line 102)" time="0" classname="src/uri/datamodel/uentity.rs - uri::datamodel::uentity::UEntity" />
    <testcase name="new (line 59)" time="0" classname="src/uri/datamodel/uentity.rs - uri::datamodel::uentity::UEntity" />
    <testcase name="EMPTY (line 43)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="for_rpc_request (line 207)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="is_empty (line 298)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="long_format (line 120)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="is_rpc_method (line 249)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="name_with_instance (line 321)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="long_format_with_instance (line 150)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="src/uri/datamodel/uuri.rs - uri::datamodel::uuri::UUri (line 33)" time="0">
      <skipped />
    </testcase>
    <testcase name="new (line 71)" time="0" classname="src/uri/datamodel/uresource.rs - uri::datamodel::uresource::UResource" />
    <testcase name="EMPTY (line 61)" time="0" classname="src/uri/datamodel/uuri.rs - uri::datamodel::uuri::UUri" />
    <testcase name="new (line 89)" time="0" classname="src/uri/datamodel/uuri.rs - uri::datamodel::uuri::UUri" />
  </testsuite>
</testsuites>
