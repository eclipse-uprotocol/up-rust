# ********************************************************************************
#  Copyright (c) 2024 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  SPDX-License-Identifier: Apache-2.0
# *******************************************************************************/

# Nightly-scheduled comprehensive test runs that would take too long for on-merge workflows
# Note: running the coverage job would only make sense if we use that to upload coverage info to a public platform

name: Nightly

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  RUST_TOOLCHAIN: ${{ vars.RUST_TOOLCHAIN || 'stable' }}

jobs:
  check-msrv:
    uses: eclipse-uprotocol/ci-cd/.github/workflows/rust-verify-msrv.yaml@main

  check-latest-deps:
    uses: eclipse-uprotocol/ci-cd/.github/workflows/rust-verify-latest-deps.yaml@main

  deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: "recursive"
    - uses: EmbarkStudios/cargo-deny-action@v2
      with: 
        rust-version: ${{ env.RUST_TOOLCHAIN }}
        command: check
        arguments: --all-features

  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - uses: rustsec/audit-check@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  # [impl->req~up-language-ci-test~1]
  test-all-features:
    uses: eclipse-uprotocol/ci-cd/.github/workflows/rust-test-featurematrix.yaml@main

  x-build:
    # The jury is still out on whether this actually adds any value, besides simply being possible...
    uses: eclipse-uprotocol/ci-cd/.github/workflows/rust-x-build.yaml@main

  coverage:
    uses: eclipse-uprotocol/ci-cd/.github/workflows/rust-coverage.yaml@main

  requirements-tracing:
    uses: eclipse-uprotocol/ci-cd/.github/workflows/requirements-tracing.yaml@main
    with:
      oft-file-patterns: "${{ vars.UP_SPEC_OPEN_FAST_TRACE_FILE_PATTERNS }} ${{ vars.UP_RUST_OPEN_FAST_TRACE_FILE_PATTERNS }}"
